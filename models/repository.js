'use strict';
module.exports = (sequelize, DataTypes) => {
  const Repository = sequelize.define('Repository', {
    node_id: DataTypes.STRING,
    name: DataTypes.STRING,
    full_name: DataTypes.STRING,
    private: DataTypes.BOOLEAN,
    html_url: DataTypes.STRING,
    description: DataTypes.STRING,
    fork: DataTypes.BOOLEAN,
    url: DataTypes.STRING,
    forks_url: DataTypes.STRING,
    keys_url: DataTypes.STRING,
    collaborators_url: DataTypes.STRING,
    teams_url: DataTypes.STRING,
    hooks_url: DataTypes.STRING,
    issue_events_url: DataTypes.STRING,
    events_url: DataTypes.STRING,
    assignees_url: DataTypes.STRING,
    branches_url: DataTypes.STRING,
    tags_url: DataTypes.STRING,
    blobs_url: DataTypes.STRING,
    git_tags_url: DataTypes.STRING,
    git_refs_url: DataTypes.STRING,
    trees_url: DataTypes.STRING,
    statuses_url: DataTypes.STRING,
    languages_url: DataTypes.STRING,
    stargazers_url: DataTypes.STRING,
    contributors_url: DataTypes.STRING,
    subscribers_url: DataTypes.STRING,
    subscription_url: DataTypes.STRING,
    commits_url: DataTypes.STRING,
    git_commits_url: DataTypes.STRING,
    comments_url: DataTypes.STRING,
    issue_comment_url: DataTypes.STRING,
    contents_url: DataTypes.STRING,
    compare_url: DataTypes.STRING,
    merges_url: DataTypes.STRING,
    archive_url: DataTypes.STRING,
    downloads_url: DataTypes.STRING,
    issues_url: DataTypes.STRING,
    pulls_url: DataTypes.STRING,
    milestones_url: DataTypes.STRING,
    notifications_url: DataTypes.STRING,
    labels_url: DataTypes.STRING,
    releases_url: DataTypes.STRING,
    deployments_url: DataTypes.STRING,
    created_at: DataTypes.DATE,
    updated_at: DataTypes.DATE,
    pushed_at: DataTypes.DATE,
    git_url: DataTypes.STRING,
    ssh_url: DataTypes.STRING,
    clone_url: DataTypes.STRING,
    svn_url: DataTypes.STRING,
    homepage: DataTypes.STRING,
    size: DataTypes.INTEGER,
    stargazers_count: DataTypes.INTEGER,
    watchers_count: DataTypes.INTEGER,
    language: DataTypes.STRING,
    has_issues: DataTypes.BOOLEAN,
    has_projects: DataTypes.BOOLEAN,
    has_downloads: DataTypes.BOOLEAN,
    has_wiki: DataTypes.BOOLEAN,
    has_pages: DataTypes.BOOLEAN,
    forks_count: DataTypes.INTEGER,
    mirror_url: DataTypes.STRING,
    archived: DataTypes.BOOLEAN,
    disabled: DataTypes.BOOLEAN,
    open_issues_count: DataTypes.INTEGER,
    forks: DataTypes.INTEGER,
    open_issues: DataTypes.INTEGER,
    watchers: DataTypes.INTEGER,
    default_branch: DataTypes.STRING,
  }, {});
  Repository.associate = function(models) {
    // associations can be defined here
  };
  return Repository;
};